# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: POC AWS SERVICES API - .NET 8

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'  
  pull_request:
    paths-ignore:
      - 'README.md'
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      PROJECT_PATH: ./poc.aws.services.api

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Update Version
      run: |
        # Generate compatible version with SemVer
        BUILD_DATE=$(date +"%Y%m%d")
        BUILD_TIME=$(date +"%H%M")
        VERSION="1.0.0-build-${BUILD_DATE}${BUILD_TIME}" # Replacing '+' with '-'

        echo "Generated Version: $VERSION"
        echo "VERSION=${VERSION}" >> $GITHUB_ENV # Export VERSION to environment

        # Updating the .csproj with new version
        sed -i "s/<Version>.*<\/Version>/<Version>${VERSION}<\/Version>/g" ${PROJECT_PATH}/poc.aws.services.api.csproj
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore ${{env.PROJECT_PATH}}  
      
    - name: Build
      run: dotnet build ${{env.PROJECT_PATH}}  --no-restore
      
    - name: Test
      run: dotnet test ${{env.PROJECT_PATH}}  --no-build --verbosity normal    

    - name: Publish
      run: dotnet publish -c Release -o '${{ github.workspace }}/out'

    - name: Zip Package
      run: |
          cd ${{ github.workspace }}/out
          zip -qr ${{ github.workspace }}/out.zip *
          
    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v22
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: poc.aws.services.api
        environment_name: Pocawsservicesapi-env 
        version_label: ${{ env.VERSION }}
        region: sa-east-1
        deployment_package: ${{ github.workspace }}/out.zip


